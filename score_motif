# Function to score a motif using a position weight matrix (PWM)
score_motif <- function(sequence, pwm) {
  # Convert the sequence to uppercase to ensure consistency
  sequence <- toupper(sequence)
  
  # Get the length of the PWM (motif)
  motif_length <- ncol(pwm)
  
  # Get the length of the sequence
  sequence_length <- nchar(sequence)
  
  # Prepare a vector to hold the scores for each position in the sequence
  scores <- numeric(sequence_length - motif_length + 1)
  
  # Scan the sequence with a sliding window
  for (i in 1:(sequence_length - motif_length + 1)) {
    # Extract the current window of the sequence
    window <- substring(sequence, i, i + motif_length - 1)
    
    # Initialize score for this window
    score <- 0
    
    # Calculate the score for this window based on the PWM
    for (j in 1:motif_length) {
      base <- substr(window, j, j)
      
      # Add the PWM score for this nucleotide at this position
      if (base == "A") score <- score + pwm["A", j]
      if (base == "C") score <- score + pwm["C", j]
      if (base == "G") score <- score + pwm["G", j]
      if (base == "T") score <- score + pwm["T", j]
    }
    
    # Store the score for this window
    scores[i] <- score
  }
  
  # Return the vector of scores
  return(scores)
}

# Function to apply motif scoring for each RBP and each sequence in the dataframe
find_rbp_binding_multiple <- function(df, pwms) {
  # Iterate over each PWM (for different RBPs)
  for (rbp_name in names(pwms)) {
    pwm <- pwms[[rbp_name]]
    
    # Create a new column in the dataframe for this RBP's max motif score
    df[[paste0("max_motif_score_", rbp_name)]] <- sapply(df$nucleotide_sequence, function(seq) {
      scores <- score_motif(seq, pwm)
      return(max(scores))  # Return the max score for the sequence
    })
  }
  
  return(df)
}

# Example PWMs for multiple RBPs with correct rownames (A, C, G, T)
pwm_ILF2 <- matrix(c(0.144257703,	0.118347339,	0.118347339,	0.335134054,	0.046518607,	0.106042417,	0.131952781,	0.131952781,
                     0.144157663,	0.118247299,	0.118247299,	0.094237695,	0.046418567,	0.105942377,	0.131852741,	0.131852741,
                     0.567627051,	0.645258103,	0.645258103,	0.193277311,	0.860744298,	0.682272909,	0.604641857,	0.604641857,
                     0.143957583,	0.118147259,	0.118147259,	0.37735094,	0.046318527,	0.105742297,	0.131552621,	0.131552621),
                   nrow = 4, byrow = TRUE)
rownames(pwm_ILF2) <- c("A", "C", "G", "T")  # Add row names

pwm_RALY <- matrix(c(0.120423343,	0.006046784,	0.006046784,	0.006046784,	0.006046784,	0.006046784,	0.078456234,
                     0.030364019,	0.006046784,	0.006046784,	0.006046784,	0.006046784,	0.093329554,	0.174053247,
                     0.030364019,	0.006046784,	0.006046784,	0.006046784,	0.006046784,	0.095158042,	0.551652053,
                     0.818848617,	0.981859646,	0.981859646,	0.981859646,	0.981859646,	0.805465617,	0.195838468),
                   nrow = 4, byrow = TRUE)
rownames(pwm_RALY) <- c("A", "C", "G", "T")  # Add row names

pwm_TIA1 <- matrix(c(0.150245179,	0.014801213,	0.014801213,	0.014801213,	0.014801213,	0.014801213,	0.084299418,
                     0.06196311,	0.014801213,	0.014801213,	0.014801213,	0.014801213,	0.206828781,	0.084299418,
                     0.06196311,	0.014801213,	0.014801213,	0.014801213,	0.014801213,	0.20477329,	0.566466532,
                     0.725828602,	0.955596359,	0.955596359,	0.955596359,	0.955596359,	0.573596714,	0.264934627),
                   nrow = 4, byrow = TRUE)
rownames(pwm_TIA1) <- c("A", "C", "G", "T")  # Add row names

pwm_RBM47 <- matrix(c(0.284942471,	1,	1,	0,	0.132466233,	0.636618309,
                      0.162981491,	0,	0,	0,	0.389394697,	0.087143572,
                      0.162881441,	0,	0,	0,	0.030915458,	0.087043522,
                      0.389194597,	0,	0,	1,	0.447223612,	0.189194597),
                   nrow = 4, byrow = TRUE)
rownames(pwm_RBM47) <- c("A", "C", "G", "T")  # Add row names

# Store the PWMs in a named list
pwms_list <- list("ILF2" = pwm_ILF2, "RALY" = pwm_RALY, "TIA1" = pwm_TIA1, "RBM47" = pwm_RBM47)

# Example Data Frame
df <- data.frame(
  gene = c("gene1", "gene2", "gene3"),
  strand = c("+","+","-"),
  chr = c("17", "3", "12"),
  exonStart_0base = c(81110914, 193626092, 21657751),
  exonEnd = c(81110955, 193626202, 21657835),
  nucleotide_sequence = c("agtcctcagaccccatgctgcctccaactgagccttgtgtttccttgcagCGCCGATGTGGAAGTGGCCAGATTCTGAGCCGCCTGACTAGAgttagtaagttgcctggcgttctcgtgcagtcactggcctctccagtggt",
                          "attattctcctccccaatttcctcttctcctcattgtgaactcgtggcagGGTCTGCTTGGTGAGCTCATTCTCTTACAACAACAAATTCAAGAGCATGAAGAGGAAGCGCGCAGAGCCGCTGGCCAATATAGCACGAGCTATGCCCAACAGAAGCGCAAGgtgatggatggtttaagggggctaccgatacattcacactaatcagccat", 
                          "taagaggctgcggtggttgtggggccccgccccctcctccctccttgcagAGCCGGCGCCGGAGGAGACGCACGCAGCTGACTTTGTCTTCTCCGCACGACTGTTACAGAGGTCTCCAGAGCCTTCTCTCTCCTGgtaggtttcggctcaggaccctgaatcctggcccacaggcaagcctgatg")
)

# Apply the function to find RBP binding scores for each RBP and each sequence in the dataframe
df_with_scores <- find_rbp_binding_multiple(df, pwms_list)

# View the updated dataframe with the motif scores for each RBP
print(df_with_scores)
